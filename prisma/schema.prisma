// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  customer
  admin
}

model User {
  id String @id @default(uuid())
  role Role
  name String 
  email String @unique
  password String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  cart Cart?

  @@map("users")
}

model Category {
  id String @id @default(uuid())
  name String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product Product[]

  @@map("categories")
}

model Product {
  id String @id @default(uuid())
  name String 
  price Decimal
  stock Int
  texture String
  weight String
  size String
  description String
  image_url String
  category_id String 
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  category Category @relation(fields: [category_id], references: [id])
  cart_products CartProduct[]

  @@map("products")
}

model Cart {
  id String @id @default(uuid())
  user_id String @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  cart_products CartProduct[]

  @@map("carts")
}

model CartProduct {
  id String @id @default(uuid())
  cart_id String 
  product_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  cart Cart @relation(fields: [cart_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  @@unique([cart_id, product_id])

  @@map("cart_products")
}